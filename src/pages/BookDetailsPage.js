// --- src/pages/BookDetailsPage.js ---
import React, { useState } from 'react';
import { mockBooks, mockReviews } from '../data/mockData';
import { useCart } from '../contexts/CartContext';
import { ChevronLeftIcon, HeartIcon, StarIcon } from '../components/icons';

const StarRating = ({ rating, className }) => (<div className={`flex items-center ${className}`}>{Array.from({ length: 5 }, (_, i) => (<StarIcon key={i} className="w-5 h-5" isFilled={i < rating} />))}</div>);

const BookDetailsPage = ({ navigateTo, bookId }) => { const book = mockBooks.find(b => b.id === bookId); const reviews = mockReviews.filter(r => r.bookId === bookId); const [isWishlisted, setIsWishlisted] = useState(false); const { addToCart } = useCart(); if (!book) return <div className="text-center p-8">Book not found.</div>; return (<div className="container mx-auto px-4 sm:px-6 lg:px-8 mt-8"><div className="flex items-center mb-8"><button onClick={() => navigateTo('home')} className="p-2 rounded-full hover:bg-gray-100 mr-2"><ChevronLeftIcon className="w-6 h-6 text-gray-600" /></button><h1 className="text-xl font-semibold text-gray-800">Book Details</h1></div><div className="grid grid-cols-1 md:grid-cols-2 gap-12 lg:gap-16"><div className="flex justify-center items-start"><div className="bg-[#F6F5FF] p-8 rounded-lg shadow-lg w-full max-w-sm"><img src={book.imageUrl} alt={`Cover of ${book.title}`} className="w-full h-auto object-cover rounded-md" onError={(e) => { e.target.onerror = null; e.target.src='https://placehold.co/300x450/cccccc/ffffff?text=Image+Not+Found'; }} /></div></div><div className="flex flex-col justify-center"><div className="flex justify-between items-start"><div><h1 className="text-4xl lg:text-5xl font-bold text-gray-900">{book.title}</h1><p className="text-xl text-gray-600 mt-2">{book.author}</p></div><button onClick={() => setIsWishlisted(!isWishlisted)} className={`p-3 rounded-full ${isWishlisted ? 'bg-red-100' : 'bg-gray-100'} hover:bg-red-100 transition-colors`}><HeartIcon className="w-6 h-6 text-gray-500" isFilled={isWishlisted} /></button></div><div className="mt-8"><h2 className="text-xl font-semibold text-gray-800">Summary</h2><p className="mt-2 text-gray-600 leading-relaxed">{book.summary || "No summary available."}</p></div><div className="mt-10"><button onClick={() => addToCart(book)} className="w-full bg-[#EF6B4A] text-white font-bold py-4 px-6 rounded-lg shadow-md hover:bg-[#e05a39] transition-colors duration-300 flex items-center justify-between text-lg"><span>{book.price.toFixed(2)} $</span><span>Add to Cart</span></button></div></div></div><div className="mt-16"><h2 className="text-2xl font-bold text-gray-800 mb-6">Reviews for this book</h2>{reviews.length > 0 ? (<div className="space-y-6">{reviews.map(review => (<div key={review.id} className="bg-white p-6 rounded-lg shadow-md"><div className="flex items-center mb-4"><img src={`https://ui-avatars.com/api/?name=${review.reviewerName.replace(' ', '+')}&background=E0E7FF&color=6C63FF`} alt={review.reviewerName} className="w-12 h-12 rounded-full mr-4" /><div><h3 className="font-semibold text-gray-800">{review.reviewerName}</h3><StarRating rating={review.rating} /></div></div><p className="text-gray-700">{review.reviewText}</p></div>))}</div>) : (<p className="text-gray-500">No reviews yet.</p>)}</div></div>); };
export default BookDetailsPage;